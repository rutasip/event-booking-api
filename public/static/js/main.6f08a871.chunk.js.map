{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BookingsPage","isLoading","fetchBookings","Authorization","deleteBookingHandler","bookingId","filter","Fragment","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","price","date","creatorId","onDetail","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","desc","prevstate","updatedEvents","push","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","rows","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"2dAEeA,G,MAAAA,IAAMC,cAAc,CAC/BC,MAAO,KACPC,OAAQ,KACRC,MAAO,SAACF,EAAOC,EAAQE,KACvBC,OAAQ,gBCDNC,E,YAOJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAPRC,MAAQ,CACNC,SAAS,GAKQ,EAMnBC,kBAAoB,WAClB,EAAKC,SAAS,SAAAC,GACZ,MAAO,CAAEH,SAAUG,EAAUH,YARd,EAYnBI,cAAgB,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAQ,EAAKC,QAAQC,QAAQC,MAC7BC,EAAW,EAAKC,WAAWH,QAAQC,MAEzC,GAA4B,IAAxBH,EAAMM,OAAOC,QAA2C,IAA3BH,EAASE,OAAOC,OAAjD,CAIA,IAAIC,EAAc,CAChBC,MAAM,2NASNC,UAAW,CACTV,MAAOA,EACPI,SAAUA,IAIT,EAAKZ,MAAMC,UACde,EAAc,CACZC,MAAM,kOAQNC,UAAW,CACTV,MAAOA,EACPI,SAAUA,KAKhBO,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACAA,EAAQC,KAAKpC,MAAMF,OACrB,EAAKuC,QAAQrC,MACXmC,EAAQC,KAAKpC,MAAMF,MACnBqC,EAAQC,KAAKpC,MAAMD,OACnBoC,EAAQC,KAAKpC,MAAMC,mBAIxBqC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,OA3EhB,EAAKzB,QAAUlB,IAAM8C,YACrB,EAAKxB,WAAatB,IAAM8C,YAHP,E,sEAkFjB,OACE,0BAAMC,UAAU,YAAYC,SAAUC,KAAKnC,eACzC,yBAAKiC,UAAU,gBACb,2BAAOG,QAAQ,SAAf,UACA,2BAAOC,KAAK,QAAQC,GAAG,QAAQC,IAAKJ,KAAK/B,WAE3C,yBAAK6B,UAAU,gBACb,2BAAOG,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWC,GAAG,WAAWC,IAAKJ,KAAK3B,cAEjD,yBAAKyB,UAAU,gBACb,4BAAQI,KAAK,UAAb,UACA,4BAAQA,KAAK,SAASG,QAASL,KAAKtC,mBAApC,aACasC,KAAKxC,MAAMC,QAAU,SAAW,e,GAtGhC6C,aAAjBhD,EAKGiD,YAAcC,EAyGRlD,QCpGAmD,G,MAXC,kBACd,yBAAKX,UAAU,WACb,yBAAKA,UAAU,YACb,8BACA,8BACA,8BACA,kCCiBSY,G,MAvBK,SAAAnD,GAAK,OACvB,wBAAIuC,UAAU,kBACXvC,EAAMoD,SAASC,IAAI,SAAAC,GAClB,OACE,wBAAIC,IAAKD,EAAQE,IAAKjB,UAAU,kBAC9B,yBAAKA,UAAU,uBACZe,EAAQ/C,MAAMkD,MADjB,KAC0B,IACvB,IAAIC,KAAKJ,EAAQK,WAAWC,sBAE/B,yBAAKrB,UAAU,0BACb,4BACEA,UAAU,MACVO,QAAS9C,EAAM6D,SAASC,U,EAAWR,EAAQE,MAF7C,iBCRNO,E,2MACJ9D,MAAQ,CACN+D,WAAW,EACXZ,SAAU,I,EASZa,cAAgB,WACd,EAAK7D,SAAS,CAAE4D,WAAW,IAiB3B5C,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAlBO,CAClBN,MAAM,gXAkBNO,QAAS,CACP,eAAgB,mBAChByC,cAAe,UAAY,EAAKjC,QAAQvC,SAGzCgC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACJ,IAAMqB,EAAWrB,EAAQC,KAAKoB,SAC9B,EAAKhD,SAAS,CAAEgD,SAAUA,EAAUY,WAAW,MAEhD9B,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,EAAK/B,SAAS,CAAE4D,WAAW,O,EAIjCG,qBAAuB,SAAAC,GACrB,EAAKhE,SAAS,CAAE4D,WAAW,IAC3B,IAAM/C,EAAc,CAClBC,MAAM,4PAQNC,UAAW,CACTyB,GAAIwB,IAIRhD,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,mBAChByC,cAAe,UAAY,EAAKjC,QAAQvC,SAGzCgC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACJ,EAAK3B,SAAS,SAAAC,GAIZ,MAAO,CAAE+C,SAHe/C,EAAU+C,SAASiB,OAAO,SAAAf,GAChD,OAAOA,EAAQE,MAAQY,IAEWJ,WAAW,OAGlD9B,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,EAAK/B,SAAS,CAAE4D,WAAW,O,mFArF/BvB,KAAKwB,kB,+BA0FL,OACE,kBAAC,IAAMK,SAAP,KACG7B,KAAKxC,MAAM+D,UACV,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACEZ,SAAUX,KAAKxC,MAAMmD,SACrBS,SAAUpB,KAAK0B,4B,GA1GApB,aAArBgB,EAMGf,YAAcC,EA4GRc,Q,QC/FAQ,G,MArBD,SAAAvE,GAAK,OACjB,yBAAKuC,UAAU,SACb,4BAAQA,UAAU,iBAChB,4BAAKvC,EAAMyD,QAEb,6BAASlB,UAAU,kBAAkBvC,EAAMwE,UAC3C,6BAASjC,UAAU,kBAChBvC,EAAMyE,WACL,4BAAQlC,UAAU,MAAMO,QAAS9C,EAAM0E,UAAvC,UAID1E,EAAM2E,YACL,4BAAQpC,UAAU,MAAMO,QAAS9C,EAAM4E,WACpC5E,EAAM6E,iBCZFC,G,MAFE,SAAA9E,GAAK,OAAI,yBAAKuC,UAAU,eCuB1BwC,G,MAvBG,SAAA/E,GAAK,OACrB,wBAAIuD,IAAKvD,EAAMgF,QAASzC,UAAU,qBAChC,6BACE,4BAAKvC,EAAMyD,OACX,qCACIzD,EAAMiF,MADV,MACoB,IAAIvB,KAAK1D,EAAMkF,MAAMtB,uBAG3C,6BACG5D,EAAML,SAAWK,EAAMmF,UACtB,+DAEA,4BACE5C,UAAU,MACVO,QAAS9C,EAAMoF,SAAStB,U,EAAW9D,EAAMgF,UAF3C,oBCQOK,G,MAnBG,SAAArF,GAChB,IAAMsF,EAAStF,EAAMsF,OAAOjC,IAAI,SAAA9C,GAC9B,OACE,kBAAC,EAAD,CACEgD,IAAKhD,EAAMiD,IACXwB,QAASzE,EAAMiD,IACfC,MAAOlD,EAAMkD,MACbwB,MAAO1E,EAAM0E,MACbC,KAAM3E,EAAM2E,KACZvF,OAAQK,EAAMuF,WACdJ,UAAW5E,EAAMiF,QAAQhC,IACzB4B,SAAUpF,EAAMyF,iBAKtB,OAAO,wBAAIlD,UAAU,eAAe+C,KCZhCI,G,kBAWJ,WAAY1F,GAAQ,IAAD,8BACjB,4CAAMA,KAXRC,MAAQ,CACN0F,UAAU,EACVL,OAAQ,GACRtB,WAAW,EACX4B,cAAe,MAME,EAJnBC,UAAW,EAIQ,EAYnBC,wBAA0B,WACxB,EAAK1F,SAAS,CAAEuF,UAAU,KAbT,EAgBnBI,oBAAsB,WACpB,EAAK3F,SAAS,CAAEuF,UAAU,IAC1B,IAAMlC,EAAQ,EAAKuC,WAAWrF,QAAQC,MAChCqE,GAAS,EAAKgB,WAAWtF,QAAQC,MACjCsE,EAAO,EAAKgB,UAAUvF,QAAQC,MAC9BuF,EAAc,EAAKC,iBAAiBzF,QAAQC,MAElD,KAC0B,IAAxB6C,EAAM1C,OAAOC,QACbiE,GAAS,GACc,IAAvBC,EAAKnE,OAAOC,QACkB,IAA9BmF,EAAYpF,OAAOC,QAJrB,CASA,IAAMT,EAAQ,CAAEkD,QAAOwB,QAAOC,OAAMiB,eACpC/D,QAAQC,IAAI9B,GAEZ,IAAMU,EAAc,CAClBC,MAAM,kbAWNC,UAAW,CACTsC,MAAOA,EACP4C,KAAMF,EACNlB,MAAOA,EACPC,KAAMA,IAIJxF,EAAQ,EAAKuC,QAAQvC,MAE3B0B,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,mBAChByC,cAAe,UAAYxE,KAG5BgC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACJ,EAAK3B,SAAS,SAAAkG,GACZ,IAAMC,EAAa,YAAOD,EAAUhB,QAWpC,OAVAiB,EAAcC,KAAK,CACjBhD,IAAKzB,EAAQC,KAAKyE,YAAYjD,IAC9BC,MAAO1B,EAAQC,KAAKyE,YAAYhD,MAChC0C,YAAapE,EAAQC,KAAKyE,YAAYN,YACtCjB,KAAMnD,EAAQC,KAAKyE,YAAYvB,KAC/BD,MAAOlD,EAAQC,KAAKyE,YAAYxB,MAChCO,QAAS,CACPhC,IAAK,EAAKvB,QAAQtC,UAGf,CAAE2F,OAAQiB,OAGpBrE,MAAM,SAAAC,GACLC,QAAQC,IAAIF,OAxFC,EA4FnBuE,mBAAqB,WACnB,EAAKtG,SAAS,CAAEuF,UAAU,EAAOC,cAAe,QA7F/B,EA+InBe,kBAAoB,SAAA3B,GAClB,EAAK5E,SAAS,SAAAC,GAEZ,MAAO,CAAEuF,cADavF,EAAUiF,OAAOsB,KAAK,SAAAC,GAAC,OAAIA,EAAErD,MAAQwB,QAjJ5C,EAsJnB8B,iBAAmB,WACjB,GAAK,EAAK7E,QAAQvC,MAAlB,CAIA,IAAMuB,EAAc,CAClBC,MAAM,6OASNC,UAAW,CACTyB,GAAI,EAAK3C,MAAM2F,cAAcpC,MAIjCpC,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,mBAChByC,cAAe,UAAY,EAAKjC,QAAQvC,SAGzCgC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACJK,QAAQC,IAAIN,GACZ,EAAK3B,SAAS,CAAEwF,cAAe,SAEhC1D,MAAM,SAAAC,GACLC,QAAQC,IAAIF,UArCd,EAAK/B,SAAS,CAAEwF,cAAe,QAtJjC,EAAKI,WAAaxG,IAAM8C,YACxB,EAAK2D,WAAazG,IAAM8C,YACxB,EAAK4D,UAAY1G,IAAM8C,YACvB,EAAK8D,iBAAmB5G,IAAM8C,YALb,E,iFASjBG,KAAKsE,gB,oCAuFQ,IAAD,OACZtE,KAAKrC,SAAS,CAAE4D,WAAW,IAmB3B5C,MAAM,WAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UApBO,CAClBN,MAAM,gZAoBNO,QAAS,CACP,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,MAAM,IAAIC,MAAM,WAElB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAK,GACJ,IAAMuD,EAASvD,EAAQC,KAAKsD,OACxB,EAAKO,UACP,EAAKzF,SAAS,CAAEkF,OAAQA,EAAQtB,WAAW,MAG9C9B,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACR,EAAK0D,UACP,EAAKzF,SAAS,CAAE4D,WAAW,Q,6CAwDjCvB,KAAKoD,UAAW,I,+BAIhB,OACE,kBAAC,IAAMvB,SAAP,MACI7B,KAAKxC,MAAM0F,UAAYlD,KAAKxC,MAAM2F,gBAAkB,kBAAC,EAAD,MACrDnD,KAAKxC,MAAM0F,UACV,kBAAC,EAAD,CACElC,MAAM,YACNgB,WAAS,EACTE,YAAU,EACVD,SAAUjC,KAAKiE,mBACf9B,UAAWnC,KAAKsD,oBAChBlB,YAAY,WAEZ,8BACE,yBAAKtC,UAAU,gBACb,2BAAOG,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,IAAKJ,KAAKuD,cAE1C,yBAAKzD,UAAU,gBACb,2BAAOG,QAAQ,SAAf,SACA,2BAAOC,KAAK,SAASC,GAAG,QAAQC,IAAKJ,KAAKwD,cAE5C,yBAAK1D,UAAU,gBACb,2BAAOG,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOC,GAAG,OAAOC,IAAKJ,KAAKyD,aAEzC,yBAAK3D,UAAU,gBACb,2BAAOG,QAAQ,eAAf,eACA,8BACEE,GAAG,cACHoE,KAAK,IACLnE,IAAKJ,KAAK2D,sBAMnB3D,KAAKxC,MAAM2F,eACV,kBAAC,EAAD,CACEnC,MAAOhB,KAAKxC,MAAM2F,cAAcnC,MAChCgB,WAAS,EACTE,YAAU,EACVD,SAAUjC,KAAKiE,mBACf9B,UAAWnC,KAAKqE,iBAChBjC,YAAapC,KAAKR,QAAQvC,MAAQ,OAAS,WAE3C,4BAAK+C,KAAKxC,MAAM2F,cAAcnC,OAC9B,qCACIhB,KAAKxC,MAAM2F,cAAcX,MAD7B,KACsC,IACnC,IAAIvB,KAAKjB,KAAKxC,MAAM2F,cAAcV,MAAMtB,sBAE3C,2BAAInB,KAAKxC,MAAM2F,cAAcO,cAGhC1D,KAAKR,QAAQvC,OACZ,yBAAK6C,UAAU,kBACb,qDACA,4BAAQA,UAAU,MAAMO,QAASL,KAAKqD,yBAAtC,iBAKHrD,KAAKxC,MAAM+D,UACV,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACEsB,OAAQ7C,KAAKxC,MAAMqF,OACnBC,WAAY9C,KAAKR,QAAQtC,OACzB8F,aAAchD,KAAKkE,yB,GApRN5D,cAAnB2C,EASG1C,YAAcC,EAmRRyC,QC3PAuB,G,MApCQ,SAAAjH,GAAK,OAC1B,kBAAC,EAAYkH,SAAb,KACG,SAAAjF,GACC,OACE,4BAAQM,UAAU,mBAChB,yBAAKA,UAAU,yBACb,0CAEF,yBAAKA,UAAU,0BACb,6BACIN,EAAQvC,OACR,4BACE,kBAAC,IAAD,CAASyH,GAAG,SAAZ,iBAGJ,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,WAEDlF,EAAQvC,OACP,kBAAC,IAAM4E,SAAP,KACE,4BACE,kBAAC,IAAD,CAAS6C,GAAG,aAAZ,aAEF,4BACE,4BAAQrE,QAASb,EAAQnC,QAAzB,mBC6BLsH,G,iNA/CbnH,MAAQ,CACNP,MAAO,KACPC,OAAQ,M,EAGVC,MAAQ,SAACF,EAAOC,EAAQE,GACtB,EAAKO,SAAS,CAAEV,MAAOA,EAAOC,OAAQA,K,EAGxCG,OAAS,WACP,EAAKM,SAAS,CAAEV,MAAO,KAAMC,OAAQ,Q,wEAIrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAM2E,SAAP,KACE,kBAAC,EAAY+C,SAAb,CACEzG,MAAO,CACLlB,MAAO+C,KAAKxC,MAAMP,MAClBC,OAAQ8C,KAAKxC,MAAMN,OACnBC,MAAO6C,KAAK7C,MACZE,OAAQ2C,KAAK3C,SAGf,kBAAC,EAAD,MACA,0BAAMyC,UAAU,gBACd,kBAAC,IAAD,KACGE,KAAKxC,MAAMP,OAAS,kBAAC,IAAD,CAAU4H,KAAK,IAAIH,GAAG,UAAUI,OAAK,IACzD9E,KAAKxC,MAAMP,OAAS,kBAAC,IAAD,CAAU4H,KAAK,QAAQH,GAAG,UAAUI,OAAK,KAC5D9E,KAAKxC,MAAMP,OACX,kBAAC,IAAD,CAAO8H,KAAK,QAAQC,UAAW1H,IAEjC,kBAAC,IAAD,CAAOyH,KAAK,UAAUC,UAAW/B,IAChCjD,KAAKxC,MAAMP,OACV,kBAAC,IAAD,CAAO8H,KAAK,YAAYC,UAAW1D,KAEnCtB,KAAKxC,MAAMP,OAAS,kBAAC,IAAD,CAAUyH,GAAG,QAAQI,OAAK,a,GAtC9CxE,cCNlB2E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6f08a871.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: (token, userId, tokenExpiration) => { },\n    logout: () => { }\n})","import React, { Component } from \"react\";\n\nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String! ) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: {email: $email, password: $password}) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n    }\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? \"Signup\" : \"Login\"}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\nexport default spinner;\n","import React from \"react\";\n\nimport \"./BookingList.css\";\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{\" \"}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div className=\"bookings__item-actions\">\n            <button\n              className=\"btn\"\n              onClick={props.onDelete.bind(this, booking._id)}\n            >\n              Cancel\n            </button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;\n","import React, { Component } from \"react\";\n\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: []\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n                  query {\n                      bookings {\n                          _id\n                          createdAt\n                          event {\n                              _id\n                              title\n                              date\n                          }\n                      }\n                  }\n              `\n    };\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  deleteBookingHandler = bookingId => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n                    mutation CancelBooking($id: ID!) {\n                        cancelBooking(bookingId: $id) {\n                            _id\n                            title\n                        }\n                    }\n                `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return { bookings: updatedBookings, isLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <BookingList\n            bookings={this.state.bookings}\n            onDelete={this.deleteBookingHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BookingsPage;\n","import React from \"react\";\n\nimport \"./Modal.css\";\n\nconst modal = props => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>\n          {props.confirmText}\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from \"react\";\n\nimport \"./Backdrop.css\";\n\nconst backdrop = props => <div className=\"backdrop\"></div>;\n\nexport default backdrop;\n","import React from \"react\";\n\nimport \"./EventItem.css\";\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        €{props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>You are the owner of this event.</p>\n      ) : (\n        <button\n          className=\"btn\"\n          onClick={props.onDetail.bind(this, props.eventId)}\n        >\n          View Details\n        </button>\n      )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from \"react\";\n\nimport EventItem from \"./EventItem/EventItem\";\nimport \"./EventList.css\";\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return <ul className=\"event__list\">{events}</ul>;\n};\n\nexport default eventList;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport EventList from \"../components/Events/EventList/EventList\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport \"./Events.css\";\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n                mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\n                    createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\n                        _id\n                        title\n                        description\n                        date\n                        price\n                    }\n                }\n            `,\n      variables: {\n        title: title,\n        desc: description,\n        price: price,\n        date: date\n      }\n    };\n\n    const token = this.context.token;\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevstate => {\n          const updatedEvents = [...prevstate.events];\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            date: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { events: updatedEvents };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fetchEvents() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n                query {\n                    events {\n                        _id\n                        title\n                        description\n                        date\n                        price\n                        creator {\n                          _id\n                          email\n                        }\n                    }\n                }\n            `\n    };\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const events = resData.data.events;\n        if (this.isActive) {\n          this.setState({ events: events, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = eventId => {\n    this.setState(prevState => {\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\n      return { selectedEvent: selectedEvent };\n    });\n  };\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n    const requestBody = {\n      query: `\n              mutation BookEvent($id: ID!) {\n                  bookEvent(eventId: $id) {\n                      _id\n                      createdAt\n                      updatedAt\n                  }\n              }\n          `,\n      variables: {\n        id: this.state.selectedEvent._id\n      }\n    };\n\n    fetch(\"/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ selectedEvent: null });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Event\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"date\" id=\"date\" ref={this.dateElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionElRef}\n                />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? \"Book\" : \"Confirm\"}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>\n              €{this.state.selectedEvent.price} -{\" \"}\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\n              Create Event\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <EventList\n            events={this.state.events}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AuthContext from \"../../context/auth-context\";\nimport \"./MainNavigation.css\";\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>EasyEvent</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport BookingsPage from './pages/Bookings';\nimport EventsPage from './pages/Events';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && <Redirect from=\"/auth\" to=\"/events\" exact />}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}